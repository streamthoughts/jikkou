/*
 * Copyright 2022 StreamThoughts.
 *
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.streamthoughts.jikkou.kafka.manager;

import io.streamthoughts.jikkou.kafka.change.ChangeComputer;
import io.streamthoughts.jikkou.kafka.change.ChangeResult;
import io.streamthoughts.jikkou.kafka.config.Configurable;
import io.streamthoughts.jikkou.kafka.model.V1SpecObject;
import io.streamthoughts.jikkou.kafka.change.Change;
import io.streamthoughts.jikkou.kafka.extensions.Extension;

import java.util.Collection;
import java.util.List;

/**
 * The top-level interface for managing resources that live on a kafka cluster, e.g., Topics, Quotas, ACLs.
 *
 * @param <R>   type of the resource handle by the manager.
 * @param <C>   type of change to be generated by the manager.
 * @param <OP>  type of {@link  ChangeComputer.Options}.
 * @param <OD>  type of {@link DescribeOptions}.
 */
public interface KafkaResourceManager<R, C extends Change<?>, OP extends ChangeComputer.Options, OD extends DescribeOptions>
        extends Extension,
        Configurable {

    enum UpdateMode {
        /**
         * Create only new resources.
         */
        CREATE_ONLY,
        /**
         * Alter only existing resources.
         */
        ALTER_ONLY,
        /**
         * Delete only orphan resources.
         */
        DELETE_ONLY,
        /**
         * Apply all resources changes (i.e., create, alter and delete).
         */
        APPLY;
    }

    /**
     * Updates the Kafka cluster resources using the given {@link V1SpecObject} list.
     *
     * @param mode          the update-mode to execute.
     * @param objects       the {@link V1SpecObject} list.
     * @param context       the {@link KafkaResourceUpdateContext}.
     * @return              the list of {@link ChangeResult}.
     */
    Collection<ChangeResult<C>> update(UpdateMode mode,
                                       List<V1SpecObject> objects,
                                       KafkaResourceUpdateContext<OP> context);


    /**
     * Describes the objects that exist on a remote Kafka cluster.
     *
     * @param options   the options to be used for describing resources.
     *
     * @return          the list of resources.
     */
    List<R> describe(OD options);


}
