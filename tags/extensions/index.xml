<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Jikkou â€“ extensions</title><link>https://www.jikkou.io/tags/extensions/</link><description>Recent content in extensions on Jikkou</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://www.jikkou.io/tags/extensions/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Extensions</title><link>https://www.jikkou.io/docs/concepts/extensions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.jikkou.io/docs/concepts/extensions/</guid><description>
&lt;h2 id="extension-providers">Extension Providers&lt;/h2>
&lt;p>Most of the Jikkou&amp;rsquo;s features are provided by &lt;strong>Jikkou Extension Providers&lt;/strong>. A provider is a module providing a set of
extensions used to manage one or more resources.&lt;/p>
&lt;h2 id="built-in-extension-providers">Built-in Extension Providers&lt;/h2>
&lt;p>Jikkou ships with a number of extension providers:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.jikkou.io/docs/providers/aiven/" title="Aiven">Aiven&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.jikkou.io/docs/providers/kafka/" title="Apache Kafka">Apache Kafka&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.jikkou.io/docs/providers/core/" title="Core">Core&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.jikkou.io/docs/providers/kafka-connect/" title="Kafka Connect">Kafka Connect&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.jikkou.io/docs/providers/schema-registry/" title="Schema Registry">Schema Registry&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Docs: Reporters</title><link>https://www.jikkou.io/docs/concepts/reporters/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.jikkou.io/docs/concepts/reporters/</guid><description>
&lt;div class="pageinfo pageinfo-info">
&lt;p>&lt;strong>&lt;em>Reporters&lt;/em>&lt;/strong> can be used to report changes applied by Jikkou to a third-party system.&lt;/p>
&lt;/div>
&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;p>Jikkou allows you to configure multiple reporters as follows:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-hocon" data-lang="hocon">jikkou {
# The list of reporters to execute
reporters: [
{
# Custom name for the reporter
name = &amp;#34;&amp;#34;
# Simple or fully qualified class name of the transformation extension.
type = &amp;#34;&amp;#34;
config = {
# Configuration properties for this reporter
}
}
]
}
&lt;/code>&lt;/pre>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Tips&lt;/h4>
The &lt;code>config&lt;/code> object passed to a &lt;em>reporter&lt;/em> will fallback on the top-level &lt;code>jikkou&lt;/code> config.
This allows you to globally declare some configuration settings.
&lt;/div>
&lt;h3 id="built-in-implementations">Built-in implementations&lt;/h3>
&lt;p>Jikkou packs with some built-in &lt;code>ChangeReporter&lt;/code> implementations:&lt;/p>
&lt;h3 id="kafkachangereporter">&lt;code>KafkaChangeReporter&lt;/code>&lt;/h3>
&lt;p>The &lt;code>KafkaChangeReporter&lt;/code> can be used to send change results into a given kafka topic. Changes will be published
as Cloud Events.&lt;/p>
&lt;h4 id="configuration-1">Configuration&lt;/h4>
&lt;p>The below example shows how to configure the &lt;code>KafkaChangeReporter&lt;/code>.&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-hocon" data-lang="hocon">jikkou {
# The default custom reporters to report applied changes.
reporters = [
{
name = &amp;#34;kafka-reporter&amp;#34;
type = io.streamthoughts.jikkou.kafka.reporter.KafkaChangeReporter
config = {
# The &amp;#39;source&amp;#39; of the event that will be generated.
event.source = &amp;#34;jikkou/cli&amp;#34;
kafka = {
# If &amp;#39;true&amp;#39;, topic will be automatically created if it does not already exist.
topic.creation.enabled = true
# The default replication factor used for creating topic.
topic.creation.defaultReplicationFactor = 1
# The name of the topic the events will be sent.
topic.name = &amp;#34;jikkou-resource-change-event&amp;#34;
# The configuration settings for Kafka Producer and AdminClient
client = ${jikkou.kafka.client} {
client.id = &amp;#34;jikkou-reporter-producer&amp;#34;
}
}
}
}
]
}
&lt;/code>&lt;/pre></description></item><item><title>Docs: Actions</title><link>https://www.jikkou.io/docs/concepts/actions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.jikkou.io/docs/concepts/actions/</guid><description>
&lt;div class="pageinfo pageinfo-info">
&lt;p>&lt;strong>&lt;em>Actions&lt;/em>&lt;/strong> allow a user to execute a specific and one-shot operation on resources.&lt;/p>
&lt;/div>
&lt;h2 id="available-actions-cli">Available Actions (CLI)&lt;/h2>
&lt;p>You can list all the available actions using the Jikkou CLI command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>jikkou api-extensions list --category&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>action &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>-kinds &amp;lt;a resource kind to filter returned results&amp;gt;&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="execution-actions-cli">Execution Actions (CLI)&lt;/h2>
&lt;p>You can execute a specific extension using the Jikkou CLI command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>jikkou action &amp;lt;ACTION_NAME&amp;gt; execute &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&amp;lt;options&amp;gt;&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Validations</title><link>https://www.jikkou.io/docs/providers/aiven/validations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.jikkou.io/docs/providers/aiven/validations/</guid><description>
&lt;p>Jikkou ships with the following built-in &lt;em>validations&lt;/em>:&lt;/p>
&lt;p>&lt;em>No validation&lt;/em>&lt;/p></description></item><item><title>Docs: Validations</title><link>https://www.jikkou.io/docs/providers/aws/validations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.jikkou.io/docs/providers/aws/validations/</guid><description>
&lt;p>Jikkou ships with the following built-in &lt;em>validations&lt;/em>:&lt;/p>
&lt;p>&lt;em>No validation&lt;/em>&lt;/p></description></item><item><title>Docs: Validations</title><link>https://www.jikkou.io/docs/providers/kafka-connect/validations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.jikkou.io/docs/providers/kafka-connect/validations/</guid><description>
&lt;p>Jikkou ships with the following built-in &lt;em>validations&lt;/em>:&lt;/p></description></item><item><title>Docs: Validations</title><link>https://www.jikkou.io/docs/providers/kafka/validations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.jikkou.io/docs/providers/kafka/validations/</guid><description>
&lt;p>Jikkou ships with the following built-in &lt;em>validations&lt;/em>:&lt;/p>
&lt;h2 id="topics">Topics&lt;/h2>
&lt;h3 id="noduplicatetopicsallowedvalidation">&lt;code>NoDuplicateTopicsAllowedValidation&lt;/code>&lt;/h3>
&lt;p>(&lt;em>auto registered&lt;/em>)&lt;/p>
&lt;h3 id="topicconfigkeysvalidation">&lt;code>TopicConfigKeysValidation&lt;/code>&lt;/h3>
&lt;p>(&lt;em>auto registered&lt;/em>)&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-hocon" data-lang="hocon">type = io.streamthoughts.jikkou.kafka.validation.TopicConfigKeysValidation
&lt;/code>&lt;/pre>&lt;p>The &lt;code>TopicConfigKeysValidation&lt;/code> allows checking if the specified topic configs are all valid.&lt;/p>
&lt;h3 id="topicminnumpartitions">&lt;code>TopicMinNumPartitions&lt;/code>&lt;/h3>
&lt;pre tabindex="0">&lt;code class="language-hocon" data-lang="hocon">type = io.streamthoughts.jikkou.kafka.validation.TopicMinNumPartitionsValidation
&lt;/code>&lt;/pre>&lt;p>The &lt;code>TopicMinNumPartitions&lt;/code> allows checking if the specified number of partitions for a topic is not less than the minimum required.&lt;/p>
&lt;p>&lt;strong>Configuration&lt;/strong>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>topicMinNumPartitions&lt;/code>&lt;/td>
&lt;td>Int&lt;/td>
&lt;td>Minimum number of partitions allowed&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="topicmaxnumpartitions">&lt;code>TopicMaxNumPartitions&lt;/code>&lt;/h3>
&lt;pre tabindex="0">&lt;code class="language-hocon" data-lang="hocon">type = io.streamthoughts.jikkou.kafka.validation.TopicMaxNumPartitions
&lt;/code>&lt;/pre>&lt;p>The &lt;code>TopicMaxNumPartitions&lt;/code> allows checking if the number of partitions for a topic is not greater than the maximum configured.&lt;/p>
&lt;p>&lt;strong>Configuration&lt;/strong>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>topicMaxNumPartitions&lt;/code>&lt;/td>
&lt;td>Int&lt;/td>
&lt;td>Maximum number of partitions allowed&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="topicminreplicationfactor">&lt;code>TopicMinReplicationFactor&lt;/code>&lt;/h3>
&lt;pre tabindex="0">&lt;code class="language-hocon" data-lang="hocon">type = io.streamthoughts.jikkou.kafka.validation.TopicMinReplicationFactor
&lt;/code>&lt;/pre>&lt;p>The &lt;code>TopicMinReplicationFactor&lt;/code> allows checking if the specified replication factor for a topic is not less than the minimum required.&lt;/p>
&lt;p>&lt;strong>Configuration&lt;/strong>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>topicMinReplicationFactor&lt;/code>&lt;/td>
&lt;td>Int&lt;/td>
&lt;td>Minimum replication factor allowed&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="topicmaxreplicationfactor">&lt;code>TopicMaxReplicationFactor&lt;/code>&lt;/h3>
&lt;pre tabindex="0">&lt;code class="language-hocon" data-lang="hocon">type = io.streamthoughts.jikkou.kafka.validation.TopicMaxReplicationFactor
&lt;/code>&lt;/pre>&lt;p>The &lt;code>TopicMaxReplicationFactor&lt;/code> allows checking if the specified replication factor for a topic is not greater than the maximum configured.&lt;/p>
&lt;p>&lt;strong>Configuration&lt;/strong>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>topicMaxReplicationFactor&lt;/code>&lt;/td>
&lt;td>Int&lt;/td>
&lt;td>Maximum replication factor allowed&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="topicnameprefix">&lt;code>TopicNamePrefix&lt;/code>&lt;/h3>
&lt;pre tabindex="0">&lt;code class="language-hocon" data-lang="hocon">type = io.streamthoughts.jikkou.kafka.validation.TopicNamePrefix
&lt;/code>&lt;/pre>&lt;p>The &lt;code>TopicNamePrefix&lt;/code> allows checking if the specified name for a topic starts with one of the configured suffixes.&lt;/p>
&lt;p>&lt;strong>Configuration&lt;/strong>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>topicNamePrefixes&lt;/code>&lt;/td>
&lt;td>List&lt;/td>
&lt;td>List of topic name prefixes allows&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="topicnamesuffix">&lt;code>TopicNameSuffix&lt;/code>&lt;/h4>
&lt;pre tabindex="0">&lt;code class="language-hocon" data-lang="hocon">type = io.streamthoughts.jikkou.kafka.validation.TopicNameSuffix
&lt;/code>&lt;/pre>&lt;p>The &lt;code>TopicNameSuffix&lt;/code> allows checking if the specified name for a topic ends with one of the configured suffixes.&lt;/p>
&lt;p>&lt;strong>Configuration&lt;/strong>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>topicNameSuffixes&lt;/code>&lt;/td>
&lt;td>List&lt;/td>
&lt;td>List of topic name suffixes allows&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="acls">ACLs&lt;/h2>
&lt;h3 id="noduplicateusersallowedvalidation">&lt;code>NoDuplicateUsersAllowedValidation&lt;/code>&lt;/h3>
&lt;p>(auto registered)&lt;/p>
&lt;h3 id="noduplicaterolesallowedvalidation">&lt;code>NoDuplicateRolesAllowedValidation&lt;/code>&lt;/h3>
&lt;p>(auto registered)&lt;/p>
&lt;h2 id="quotas">Quotas&lt;/h2>
&lt;h3 id="quotasentityvalidation">&lt;code>QuotasEntityValidation&lt;/code>&lt;/h3>
&lt;p>(auto registered)&lt;/p></description></item><item><title>Docs: Validations</title><link>https://www.jikkou.io/docs/providers/schema-registry/validations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.jikkou.io/docs/providers/schema-registry/validations/</guid><description>
&lt;p>Jikkou ships with the following built-in &lt;em>validations&lt;/em>:&lt;/p>
&lt;h2 id="subject">Subject&lt;/h2>
&lt;h3 id="schemacompatibilityvalidation">&lt;code>SchemaCompatibilityValidation&lt;/code>&lt;/h3>
&lt;pre tabindex="0">&lt;code class="language-hocon" data-lang="hocon">type = io.streamthoughts.jikkou.schema.registry.validation.SchemaCompatibilityValidation
&lt;/code>&lt;/pre>&lt;p>The &lt;code>SchemaCompatibilityValidation&lt;/code> allows testing the compatibility of the schema with the latest
version already registered in the Schema Registry using the provided compatibility-level.&lt;/p>
&lt;h3 id="avroschemavalidation">&lt;code>AvroSchemaValidation&lt;/code>&lt;/h3>
&lt;p>The &lt;code>AvroSchemaValidation&lt;/code> allows checking if the specified Avro schema matches some specific avro schema definition
rules;&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-hocon" data-lang="hocon">type = io.streamthoughts.jikkou.schema.registry.validation.AvroSchemaValidation
&lt;/code>&lt;/pre>&lt;p>&lt;strong>Configuration&lt;/strong>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>fieldsMustHaveDoc&lt;/code>&lt;/td>
&lt;td>Boolean&lt;/td>
&lt;td>Verify that all record fields have a &lt;code>doc&lt;/code> property&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>fieldsMustBeNullable&lt;/code>&lt;/td>
&lt;td>Boolean&lt;/td>
&lt;td>Verify that all record fields are nullable&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>fieldsMustBeOptional&lt;/code>&lt;/td>
&lt;td>Boolean&lt;/td>
&lt;td>Verify that all record fields are optional&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item></channel></rss>