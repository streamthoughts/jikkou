<?xml version="1.0" encoding="UTF-8"?>
<!--
  SPDX-License-Identifier: Apache-2.0
  Copyright (c) The original authors

  Licensed under the Apache Software License version 2.0, available at http://www.apache.org/licenses/LICENSE-2.0
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>io.streamthoughts</groupId>
        <artifactId>jikkou-parent</artifactId>
        <version>0.36.0-SNAPSHOT</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>

    <artifactId>jikkou-api-server</artifactId>
    <name>Jikkou REST :: API Server</name>
    <description>REST API interface for Jikkou</description>

    <packaging>${packaging}</packaging>

    <properties>
        <packaging>jar</packaging>
        <license.header.file>${project.parent.basedir}/header</license.header.file>
        <!-- Micronaut properties -->
        <micronaut.version>4.7.3</micronaut.version>
        <micronaut.core.version>4.7.10</micronaut.core.version>
        <micronaut-maven-plugin.version>4.7.1</micronaut-maven-plugin.version>
        <micronaut.aot.enabled>false</micronaut.aot.enabled>
        <micronaut-serde-processor.version>1.5.3</micronaut-serde-processor.version>
        <micronaut-security.version>4.11.2</micronaut-security.version>
        <micronaut.runtime>netty</micronaut.runtime>
        <exec.mainClass>io.streamthoughts.jikkou.rest.JikkouApiServer</exec.mainClass>
        <!-- Additional -->
        <git-commit-id-maven-plugin.version>7.0.0</git-commit-id-maven-plugin.version>
        <docker.image.name>streamthoughts/${project.artifactId}</docker.image.name>
        <docker.image.tag>main</docker.image.tag>
    </properties>

    <dependencies>
        <!-- START dependencies for Jikkou -->
        <dependency>
            <groupId>io.streamthoughts</groupId>
            <artifactId>jikkou-core</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>jikkou-api-data</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!-- START dependencies for Jikkou Extension Providers -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>jikkou-provider-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>jikkou-provider-kafka</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>jikkou-provider-schema-registry</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>jikkou-provider-aiven</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>jikkou-provider-kafka-connect</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!-- END dependencies for Jikkou Extension Providers -->

        <!-- START dependencies for Micronaut -->
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-http-server-netty</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-inject-java</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-inject</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-jackson-databind</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-runtime</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut.security</groupId>
            <artifactId>micronaut-security</artifactId>
            <version>${micronaut-security.version}</version>
        </dependency>
        <dependency>
            <groupId>io.micronaut.security</groupId>
            <artifactId>micronaut-security-jwt</artifactId>
            <version>${micronaut-security.version}</version>
        </dependency>
        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-core</artifactId>
            <version>3.7.1</version>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-management</artifactId>
            <scope>compile</scope>
        </dependency>
        <!-- END dependencies for Micronaut -->

        <!-- Security -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-crypto</artifactId>
            <version>6.2.4</version>
        </dependency>

        <!-- START dependencies for logging -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>2.0.16</version>
        </dependency>
        <!-- END dependencies for logging -->

        <!-- Support for AWS MSK Apache Kafka Managed Service -->
        <dependency>
            <groupId>software.amazon.msk</groupId>
            <artifactId>aws-msk-iam-auth</artifactId>
            <scope>compile</scope>
        </dependency>

        <!-- START dependencies for test -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut.test</groupId>
            <artifactId>micronaut-test-junit5</artifactId>
            <version>4.6.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-http-client</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- END dependencies for test -->
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.micronaut.platform</groupId>
                <artifactId>micronaut-parent</artifactId>
                <version>${micronaut.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.micronaut</groupId>
                <artifactId>micronaut-core-bom</artifactId>
                <version>${micronaut.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>io.github.git-commit-id</groupId>
                <artifactId>git-commit-id-maven-plugin</artifactId>
                <version>${git-commit-id-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>validate-the-git-infos</id>
                        <goals>
                            <goal>validateRevision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <generateGitPropertiesFilename>${project.build.outputDirectory}/project-info.properties
                    </generateGitPropertiesFilename>
                    <failOnNoGitDirectory>false</failOnNoGitDirectory>
                    <dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
                    <prefix>project</prefix>
                    <includeOnlyProperties>
                        <includeOnlyProperty>project.build.time</includeOnlyProperty>
                        <includeOnlyProperty>project.commit.id</includeOnlyProperty>
                        <includeOnlyProperty>project.build.version</includeOnlyProperty>
                    </includeOnlyProperties>
                </configuration>
            </plugin>
            <!-- Maven -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <release>${jdk.version}</release>
                    <!-- Uncomment to enable incremental compilation -->
                    <useIncrementalCompilation>false</useIncrementalCompilation>
                    <annotationProcessorPaths combine.children="append">
                        <path>
                            <groupId>io.micronaut</groupId>
                            <artifactId>micronaut-inject-java</artifactId>
                            <version>${micronaut.core.version}</version>
                        </path>
                        <path>
                            <groupId>io.micronaut.security</groupId>
                            <artifactId>micronaut-security-annotations</artifactId>
                            <version>${micronaut-security.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <compilerArgs>
                        <arg>-Amicronaut.processing.group=io.streamthoughts</arg>
                        <arg>-Amicronaut.processing.module=jikkou-api-server</arg>
                        <arg>-verbose</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <!-- Micronaut -->
            <plugin>
                <groupId>io.micronaut.maven</groupId>
                <artifactId>micronaut-maven-plugin</artifactId>
                <version>${micronaut-maven-plugin.version}</version>
                <extensions>true</extensions>
                <configuration>
                    <micronautAotVersion>2.0.1</micronautAotVersion>
                    <testResourcesVersion>1.2.5</testResourcesVersion>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>default</id>
            <activation>
                <property>
                    <name>packaging</name>
                    <value>docker</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- Docker -->
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <version>3.4.2</version>
                        <configuration>
                            <from>
                                <image>eclipse-temurin</image>
                            </from>
                            <to>
                                <image>${docker.image.name}:${docker.image.tag}</image>
                            </to>
                            <extraDirectories>
                                <paths>
                                    <path>
                                        <from>src/main/docker</from>
                                        <into>/</into>
                                    </path>
                                </paths>
                                <permissions>
                                    <permission>
                                        <file>/entrypoint.sh</file>
                                        <mode>755</mode>
                                    </permission>
                                </permissions>
                            </extraDirectories>
                            <container>
                                <entrypoint>/entrypoint.sh</entrypoint>
                                <creationTime>USE_CURRENT_TIMESTAMP</creationTime>
                                <ports>
                                    <port>28082</port>
                                </ports>
                                <environment>
                                    <MICRONAUT_CONFIG_FILES>/app/resources/application.yaml</MICRONAUT_CONFIG_FILES>
                                </environment>
                            </container>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>dist</id>
            <activation>
                <property>
                    <name>dist</name>
                </property>
            </activation>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                        <excludes>
                            <exclude>logback.xml</exclude>
                        </excludes>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>appassembler-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>make-java-binary</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>assemble</goal>
                                </goals>
                                <configuration>
                                    <assembleDirectory>
                                        ${project.build.directory}/distribution
                                    </assembleDirectory>
                                    <licenseHeaderFile>${project.basedir}/header</licenseHeaderFile>
                                    <platforms>
                                        <platform>unix</platform>
                                    </platforms>
                                    <binFileExtensions>
                                        <unix>.sh</unix>
                                    </binFileExtensions>
                                    <programs>
                                        <program>
                                            <mainClass>${exec.mainClass}</mainClass>
                                            <name>${project.artifactId}</name>
                                        </program>
                                    </programs>
                                    <configurationDirectory>etc</configurationDirectory>
                                    <copyConfigurationDirectory>true</copyConfigurationDirectory>
                                    <generateRepository>true</generateRepository>
                                    <repositoryLayout>flat</repositoryLayout>
                                    <repositoryName>lib</repositoryName>
                                    <extraJvmArguments>
                                        -Dlogger.config=@BASEDIR@/etc/logback.xml
                                        -Dmicronaut.config.file=@BASEDIR@/etc/application.yaml
                                    </extraJvmArguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration combine.self="append">
                            <attach>false</attach>
                            <appendAssemblyId>false</appendAssemblyId>
                            <finalName>${project.artifactId}-${project.version}</finalName>
                            <outputDirectory>${app.distribution.directory}</outputDirectory>
                            <workDirectory>${project.build.directory}/assembly/work</workDirectory>
                            <skipAssembly>false</skipAssembly>
                            <descriptors>
                                <descriptor>${project.basedir}/src/main/assembly/assembly.xml</descriptor>
                            </descriptors>
                        </configuration>
                        <executions>
                            <execution>
                                <id>make-distribution</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>